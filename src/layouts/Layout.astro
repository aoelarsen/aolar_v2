---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang='en'>
    <head>
        <meta charset='UTF-8' />
        <meta name='viewport' content='width=device-width' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <meta name='generator' content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class='min-h-screen bg-secondary text-primary dark:bg-primary dark:text-secondary'>
        <div class='container min-h-screen front-wrap mx-auto'>
            <Header />
            <slot />
            <Footer />
        </div>
        <style is:global>
            :root {
                --accent: 124, 58, 237;
                --accent-gradient: linear-gradient(
                    45deg,
                    rgb(var(--accent)),
                    #da62c4 30%,
                    white 60%
                );
            }
            html {
                font-family: system-ui, sans-serif;
                background-color: #f6f6f6;
            }
            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                font-family: Rubik, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
                    'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,
                    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
            }

            code {
                font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
                    Bitstream Vera Sans Mono, Courier New, monospace;
            }
            .front-wrap {
                display: grid;
                grid-template-rows: auto 1fr auto;
            }
            .fadeIn {
                transform: translate(0);
                filter: blur(0);
            }
        </style>

        <script is:inline>
            const options = {
                root: document,
                rootMargin: '0px',
                threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry) => {
                    console.log(entry);
                    if (entry.isIntersecting) {
                        entry.target.classList.add('fadeIn');
                    } else {
                        entry.target.classList.remove('fadeIn');
                    }
                });
            }, options);

            const hiddenElements = document.querySelectorAll('.animText');
            hiddenElements.forEach((el) => observer.observe(el));
        </script>
    </body>
</html>
